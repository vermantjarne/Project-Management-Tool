server:
  port: 8083

logging:
  level:
    root: INFO
    org.springframework.cloud.gateway: INFO
    org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator: INFO
    reactor.netty: INFO
    org.springframework.security: TRACE

spring:
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENTID}
            client-secret: ${GOOGLE_CLIENTSECRET}
            scope: openid,profile,email
      resourceserver:
        jwt:
          issuer-uri: https://accounts.google.com
          jwk-set-uri: https://www.googleapis.com/oauth2/v3/certs

  cloud:
    gateway:
      routes:
        # CREATE employee
        - id: employee-service-create
          uri: http://${EMPLOYEE_SERVICE_BASEURL:localhost:8080}
          predicates:
            - Path=/employee
            - Method=POST
          filters:
            - SetPath=/api/employee

        # GET all employees
        - id: employee-service-get-all
          uri: http://${EMPLOYEE_SERVICE_BASEURL:localhost:8080}
          predicates:
            - Path=/employee
            - Method=GET
          filters:
            - SetPath=/api/employee/all

        # GET employee by ID
        - id: employee-service-get-by-id
          uri: http://${EMPLOYEE_SERVICE_BASEURL:localhost:8080}
          predicates:
            - Path=/employee/{id}
            - Method=GET
          filters:
            - SetPath=/api/employee/{id}

        # GET employee by name
        - id: employee-service-get-by-name
          uri: http://${EMPLOYEE_SERVICE_BASEURL:localhost:8080}
          predicates:
            - Path=/employee
            - Method=GET
            - Query=name={name}
          filters:
            - SetPath=/api/employee?name={name}

        # UPDATE employee
        - id: employee-service-update
          uri: http://${EMPLOYEE_SERVICE_BASEURL:localhost:8080}
          predicates:
            - Path=/employee/{id}
            - Method=PUT
          filters:
            - SetPath=/api/employee/{id}

        # DELETE employee
        - id: employee-service-delete
          uri: http://${EMPLOYEE_SERVICE_BASEURL:localhost:8080}
          predicates:
            - Path=/employee/{id}
            - Method=DELETE
          filters:
            - SetPath=/api/employee/{id}

        # CREATE project
        - id: project-service-create
          uri: http://${PROJECT_SERVICE_BASEURL:localhost:8081}
          predicates:
            - Path=/project
            - Method=POST
          filters:
            - SetPath=/api/project

        # GET all projects
        - id: project-service-get-all
          uri: http://${PROJECT_SERVICE_BASEURL:localhost:8081}
          predicates:
            - Path=/project
            - Method=GET
          filters:
            - SetPath=/api/project/all

        # GET active projects
        - id: project-service-get-active
          uri: http://${PROJECT_SERVICE_BASEURL:localhost:8081}
          predicates:
            - Path=/project/active
            - Method=GET
          filters:
            - SetPath=/api/project/active

        # GET project by ID
        - id: project-service-get-by-id
          uri: http://${PROJECT_SERVICE_BASEURL:localhost:8081}
          predicates:
            - Path=/project/{id}
            - Method=GET
          filters:
            - SetPath=/api/project/{id}

        # GET project by project lead
        - id: project-service-get-by-lead
          uri: http://${PROJECT_SERVICE_BASEURL:localhost:8081}
          predicates:
            - Path=/project
            - Method=GET
            - Query=projectLead={projectLead}
          filters:
            - SetPath=/api/project?projectLead={projectLead}

        # UPDATE project
        - id: project-service-update
          uri: http://${PROJECT_SERVICE_BASEURL:localhost:8081}
          predicates:
            - Path=/project/{id}
            - Method=PUT
          filters:
            - SetPath=/api/project/{id}

        # DELETE project
        - id: project-service-delete
          uri: http://${PROJECT_SERVICE_BASEURL:localhost:8081}
          predicates:
            - Path=/project/{id}
            - Method=DELETE
          filters:
            - SetPath=/api/project/{id}

        # CREATE task
        - id: task-service-create
          uri: http://${TASK_SERVICE_BASEURL:localhost:8082}
          predicates:
            - Path=/task
            - Method=POST
          filters:
            - SetPath=/api/task

        # GET all tasks
        - id: task-service-get-all
          uri: http://${TASK_SERVICE_BASEURL:localhost:8082}
          predicates:
            - Path=/task
            - Method=GET
          filters:
            - SetPath=/api/task/all

        # GET active tasks
        - id: task-service-get-active
          uri: http://${TASK_SERVICE_BASEURL:localhost:8082}
          predicates:
            - Path=/task/active
            - Method=GET
          filters:
            - SetPath=/api/task/active

        # GET task by ID
        - id: task-service-get-by-id
          uri: http://${TASK_SERVICE_BASEURL:localhost:8082}
          predicates:
            - Path=/task/{id}
            - Method=GET
          filters:
            - SetPath=/api/task/{id}

        # GET tasks by project
        - id: task-service-get-by-project
          uri: http://${TASK_SERVICE_BASEURL:localhost:8082}
          predicates:
            - Path=/task/project/{projectId}
            - Method=GET
          filters:
            - SetPath=/api/task/project/{projectId}

        # UPDATE task
        - id: task-service-update
          uri: http://${TASK_SERVICE_BASEURL:localhost:8082}
          predicates:
            - Path=/task/{id}
            - Method=PUT
          filters:
            - SetPath=/api/task/{id}

        # DELETE task
        - id: task-service-delete
          uri: http://${TASK_SERVICE_BASEURL:localhost:8082}
          predicates:
            - Path=/task/{id}
            - Method=DELETE
          filters:
            - SetPath=/api/task/{id}